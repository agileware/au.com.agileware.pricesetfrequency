<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2019
 *
 * Generated from /var/www/civicrmmaster/sites/default/files/civicrm/ext/au.com.agileware.pricesetfrequency/xml/schema/CRM/Pricesetfrequency/PricesetIndividualContribution.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:f194fa2028a53184fffc0abe19421355)
 */

/**
 * Database access object for the PricesetIndividualContribution entity.
 */
class CRM_Pricesetfrequency_DAO_PricesetIndividualContribution extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'civicrm_priceset_individual_contribution';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  static $_log = TRUE;

  /**
   * Unique PricesetIndividualContribution ID
   *
   * @var int unsigned
   */
  public $id;

  /**
   * FK to PriceField
   *
   * @var int unsigned
   */
  public $price_field_id;

  /**
   * FK to PriceFieldValue
   *
   * @var int unsigned
   */
  public $price_field_value_id;

  /**
   * @var boolean
   */
  public $create_individual_contribution;

  /**
   * Time units for recurrence of payment.
   *
   * @var string
   */
  public $recurring_contribution_unit;

  /**
   * Source of individual contribution.
   *
   * @var string
   */
  public $contribution_source;

  /**
   * Number of time units for recurrence of payment.
   *
   * @var int unsigned
   */
  public $recurring_contribution_interval;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_priceset_individual_contribution';
    parent::__construct();
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static ::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'price_field_id', 'civicrm_price_field', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'price_field_value_id', 'civicrm_price_field_value', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Pricesetfrequency_ExtensionUtil::ts('Unique PricesetIndividualContribution ID'),
          'required' => TRUE,
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
        ],
        'price_field_id' => [
          'name' => 'price_field_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Pricesetfrequency_ExtensionUtil::ts('FK to PriceField'),
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
        ],
        'price_field_value_id' => [
          'name' => 'price_field_value_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Pricesetfrequency_ExtensionUtil::ts('FK to PriceFieldValue'),
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
        ],
        'create_individual_contribution' => [
          'name' => 'create_individual_contribution',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_Pricesetfrequency_ExtensionUtil::ts('Create Individual Contribution'),
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
        ],
        'recurring_contribution_unit' => [
          'name' => 'recurring_contribution_unit',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Pricesetfrequency_ExtensionUtil::ts('Recurring Contribution Unit'),
          'description' => CRM_Pricesetfrequency_ExtensionUtil::ts('Time units for recurrence of payment.'),
          'maxlength' => 8,
          'size' => CRM_Utils_Type::EIGHT,
          'default' => 'month',
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
        ],
        'contribution_source' => [
          'name' => 'contribution_source',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Pricesetfrequency_ExtensionUtil::ts('Contribution Source'),
          'description' => CRM_Pricesetfrequency_ExtensionUtil::ts('Source of individual contribution.'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => TRUE,
          'where' => 'civicrm_priceset_individual_contribution.contribution_source',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'default' => 'NULL',
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
        ],
        'recurring_contribution_interval' => [
          'name' => 'recurring_contribution_interval',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Pricesetfrequency_ExtensionUtil::ts('Recurring Contribution Interval'),
          'description' => CRM_Pricesetfrequency_ExtensionUtil::ts('Number of time units for recurrence of payment.'),
          'required' => TRUE,
          'table_name' => 'civicrm_priceset_individual_contribution',
          'entity' => 'PricesetIndividualContribution',
          'bao' => 'CRM_Pricesetfrequency_DAO_PricesetIndividualContribution',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'priceset_individual_contribution', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'priceset_individual_contribution', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
